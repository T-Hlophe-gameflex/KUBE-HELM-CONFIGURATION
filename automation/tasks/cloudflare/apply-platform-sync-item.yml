---
# Tasks for a single platform_sync target. Expects `target` variable in scope.

- name: Determine FQDN for record
  set_fact:
    platform_target_fqdn: >-
      {{
        target.domain if target.name in ['@', target.domain]
        else (target.name if target.name.endswith(target.domain) else target.name ~ '.' ~ target.domain)
      }}

- name: Locate existing record in domain snapshot
  set_fact:
    platform_existing_record: >-
      {{
        (domain_records.get(target.domain, [])
          | selectattr('name', 'equalto', platform_target_fqdn)
          | selectattr('type', 'equalto', target.type)
          | list | first) | default({})
      }}

- name: Determine API endpoint and method
  set_fact:
    platform_record_endpoint: "{{ api_base }}/zones/{{ zone_map[target.domain] }}/dns_records{{ platform_existing_record.id | default('') | ternary('/' ~ platform_existing_record.id, '') }}"
    platform_record_method: "{{ 'PUT' if platform_existing_record else 'POST' }}"

- name: Build base payload for record
  set_fact:
    platform_payload:
      type: "{{ target.type }}"
      name: "{{ target.name if target.name not in ['@', target.domain] else target.domain }}"
      content: "{{ target.value }}"
      ttl: "{{ target.ttl | int }}"

- name: Append proxied flag when provided
  set_fact:
    platform_payload: "{{ platform_payload | combine({'proxied': target.proxied}) }}"
  when: target.proxied is not none

- name: Submit record to Cloudflare
  uri:
    url: "{{ platform_record_endpoint }}"
    method: "{{ platform_record_method }}"
    headers: "{{ cloudflare_headers }}"
    body_format: json
    body: "{{ platform_payload | to_json }}"
    return_content: true
    register: platform_sync_result
    validate_certs: "{{ cf_validate_certs | default(true) }}"

- name: Append platform sync summary entry
  set_fact:
    change_log: "{{ change_log + [platform_sync_summary] }}"
  vars:
    platform_sync_summary:
      workflow: platform_sync
      domain: "{{ target.domain }}"
      record_key: "{{ target.record_key }}"
      status: "{{ platform_sync_result.json.success | default(false) | bool }}"
