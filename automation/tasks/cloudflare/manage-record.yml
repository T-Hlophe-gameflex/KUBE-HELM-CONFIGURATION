---
# Minimal manage-record tasks used by AWX wrapper for dry-run testing

- name: Set input variables
  set_fact:
    active_domain: "{{ survey_domain | default(domain | default('example.com')) }}"
    effective_record_name: "{{ survey_record_name | default(record_name | default('')) }}"
    effective_record_type: "{{ survey_record_type | default(record_type | default('A')) }}"
    effective_record_content: "{{ survey_record_value | default(record_value | default('')) }}"
    effective_record_ttl_raw: "{{ survey_record_ttl | default(record_ttl | default('auto')) }}"
    effective_record_proxied_raw: "{{ survey_record_proxied | default(record_proxied | default('')) }}"

- name: Validate required fields
  assert:
    that:
      - effective_record_type is not none
      - effective_record_content is not none
    fail_msg: "record_type and record_value must be provided."

- name: Normalize TTL
  set_fact:
    effective_record_ttl: "{{ 60 if effective_record_ttl_raw == 'auto' else (effective_record_ttl_raw | int) }}"

- name: Normalize proxied flag
  set_fact:
    # None means 'not provided' so downstream can choose default behavior
    effective_record_proxied: "{{ None if (effective_record_proxied_raw is undefined or effective_record_proxied_raw == '') else ((effective_record_proxied_raw | string | lower) in ['true','yes','1','on']) }}"

- name: Build record payload
  set_fact:
    record_payload:
      type: "{{ effective_record_type }}"
      name: "{{ effective_record_name if effective_record_name != '@' else active_domain }}"
      content: "{{ effective_record_content }}"
      ttl: "{{ effective_record_ttl }}"

- name: Add proxied flag when provided
  set_fact:
    record_payload: "{{ record_payload | combine({'proxied': effective_record_proxied}) }}"
  when: effective_record_proxied is not none

- name: Compute record endpoint (placeholder)
  set_fact:
    record_endpoint: "{{ api_base | default('https://api.cloudflare.com/client/v4') }}/zones/{{ zone_map[active_domain] | default('ZONE_ID') }}/dns_records"
    record_method: "POST"

- name: "Dry-run: show planned Cloudflare request"
  debug:
    msg:
      - "DRY RUN: would call {{ record_method }} {{ record_endpoint }}"
      - "payload: {{ record_payload }}"
  when: dry_run | default(false)

