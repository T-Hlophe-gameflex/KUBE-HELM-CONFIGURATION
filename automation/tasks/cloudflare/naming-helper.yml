---
# Naming helper for DNS records
# Inputs (expected as extra_vars or facts):
#   naming_pattern: one of [legacy, new, mixed, special, direct]
#   env: environment short code (e.g., p, s, t, g, NNN)
#   num: numeric id (e.g., 001)
#   service: service name (e.g., api, web)
#   name: freeform name when using special/direct patterns

- name: Build naming suggestion from pattern
  set_fact:
    naming_pattern: "{{ naming_pattern | default('new') }}"
    env: "{{ env | default('t') }}"
    num: "{{ num | default('001') }}"
    service: "{{ service | default('svc') }}"
    name: "{{ name | default('') }}"

- name: Compute naming suggestion
  set_fact:
    naming_suggestion: >-
      {{ (
         (naming_pattern == 'legacy') | ternary(('game-flex-' ~ (env|default('')) ~ (num|default(''))),
         (naming_pattern == 'new')     | ternary(((env|default('')) ~ (num|default('')) ~ '-' ~ (service|default(''))),
         (naming_pattern == 'mixed')   | ternary(((service|default('')) ~ '-' ~ (env|default('')) ~ (num|default(''))),
         (naming_pattern == 'special') | ternary(((name|default('')) ~ '-' ~ (service|default(''))),
         (naming_pattern == 'direct')  | ternary((name|default('')),
         ((env|default('')) ~ (num|default('')) ~ '-' ~ (service|default('')))
       ))))) }}

- name: Normalize naming suggestion to lowercase and set record_name
  set_fact:
    suggested_record_name: "{{ naming_suggestion | lower }}"
    record_name: "{{ suggested_record_name }}"

- name: Validate naming suggestion not empty
  ansible.builtin.assert:
    that:
      - suggested_record_name is defined
      - (suggested_record_name | length) > 0
    fail_msg: "Naming helper could not construct a record name; ensure inputs (env/num/service/name) are provided for the chosen pattern."

- name: Show naming suggestion
  debug:
    msg: "Suggested record name: {{ suggested_record_name }}"
