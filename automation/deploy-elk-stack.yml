---
- name: Deploy Complete ELK Stack with Filebeat and Logstash
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    namespace: "{{ namespace | default('elastic-stack') }}"
    elasticsearch_replicas: "{{ elasticsearch_replicas | default(1) }}"
    elasticsearch_memory: "{{ elasticsearch_memory | default('2Gi') }}"
    elasticsearch_cpu: "{{ elasticsearch_cpu | default('1000m') }}"
    kibana_memory: "{{ kibana_memory | default('1Gi') }}"
    logstash_memory: "{{ logstash_memory | default('1Gi') }}"
    storage_class: "{{ storage_class | default('standard') }}"
    storage_size: "{{ storage_size | default('10Gi') }}"
    expose_services: "{{ expose_services | default(true) }}"
    
  tasks:
    - name: Create namespace
      kubernetes.core.k8s:
        name: "{{ namespace }}"
        api_version: v1
        kind: Namespace
        state: present
        
    - name: Deploy Elasticsearch StatefulSet
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: StatefulSet
          metadata:
            name: elasticsearch
            namespace: "{{ namespace }}"
            labels:
              app: elasticsearch
          spec:
            serviceName: elasticsearch
            replicas: "{{ elasticsearch_replicas }}"
            selector:
              matchLabels:
                app: elasticsearch
            template:
              metadata:
                labels:
                  app: elasticsearch
              spec:
                containers:
                - name: elasticsearch
                  image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
                  ports:
                  - containerPort: 9200
                    name: rest
                  - containerPort: 9300
                    name: inter-node
                  env:
                  - name: cluster.name
                    value: k8s-logs
                  - name: node.name
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: discovery.seed_hosts
                    value: "elasticsearch-0.elasticsearch"
                  - name: cluster.initial_master_nodes
                    value: "elasticsearch-0"
                  - name: ES_JAVA_OPTS
                    value: "-Xms1g -Xmx1g"
                  - name: xpack.security.enabled
                    value: "false"
                  - name: xpack.security.enrollment.enabled
                    value: "false"
                  resources:
                    limits:
                      memory: "{{ elasticsearch_memory }}"
                      cpu: "{{ elasticsearch_cpu }}"
                    requests:
                      memory: "{{ elasticsearch_memory }}"
                      cpu: "500m"
                  volumeMounts:
                  - name: data
                    mountPath: /usr/share/elasticsearch/data
            volumeClaimTemplates:
            - metadata:
                name: data
                labels:
                  app: elasticsearch
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: "{{ storage_class }}"
                resources:
                  requests:
                    storage: "{{ storage_size }}"
                    
    - name: Create Elasticsearch Service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: elasticsearch
            namespace: "{{ namespace }}"
            labels:
              app: elasticsearch
          spec:
            selector:
              app: elasticsearch
            clusterIP: None
            ports:
            - port: 9200
              name: rest
            - port: 9300
              name: inter-node
              
    - name: Create Elasticsearch LoadBalancer Service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: elasticsearch-lb
            namespace: "{{ namespace }}"
            labels:
              app: elasticsearch
          spec:
            type: LoadBalancer
            selector:
              app: elasticsearch
            ports:
            - port: 9200
              targetPort: 9200
              name: rest
      when: expose_services
      
    - name: Deploy Kibana
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: kibana
            namespace: "{{ namespace }}"
            labels:
              app: kibana
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: kibana
            template:
              metadata:
                labels:
                  app: kibana
              spec:
                containers:
                - name: kibana
                  image: docker.elastic.co/kibana/kibana:8.11.0
                  ports:
                  - containerPort: 5601
                  env:
                  - name: ELASTICSEARCH_HOSTS
                    value: "http://elasticsearch:9200"
                  - name: SERVER_NAME
                    value: kibana
                  - name: SERVER_HOST
                    value: "0.0.0.0"
                  resources:
                    limits:
                      memory: "{{ kibana_memory }}"
                    requests:
                      memory: "{{ kibana_memory }}"
                      cpu: "100m"
                      
    - name: Create Kibana Service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: kibana
            namespace: "{{ namespace }}"
            labels:
              app: kibana
          spec:
            type: LoadBalancer
            selector:
              app: kibana
            ports:
            - port: 5601
              targetPort: 5601
      when: expose_services
      
    - name: Deploy Logstash
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: logstash
            namespace: "{{ namespace }}"
            labels:
              app: logstash
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: logstash
            template:
              metadata:
                labels:
                  app: logstash
              spec:
                containers:
                - name: logstash
                  image: docker.elastic.co/logstash/logstash:8.11.0
                  ports:
                  - containerPort: 5044
                  env:
                  - name: LS_JAVA_OPTS
                    value: "-Xmx1g -Xms1g"
                  resources:
                    limits:
                      memory: "{{ logstash_memory }}"
                    requests:
                      memory: "{{ logstash_memory }}"
                      cpu: "100m"
                  volumeMounts:
                  - name: logstash-config
                    mountPath: /usr/share/logstash/pipeline
                volumes:
                - name: logstash-config
                  configMap:
                    name: logstash-config
                    
    - name: Create Logstash Configuration
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: logstash-config
            namespace: "{{ namespace }}"
          data:
            logstash.conf: |
              input {
                beats {
                  port => 5044
                }
              }
              filter {
                if [fields][log_type] == "application" {
                  mutate {
                    add_tag => ["application"]
                  }
                }
                if [kubernetes] {
                  mutate {
                    add_field => { "k8s_namespace" => "%{[kubernetes][namespace]}" }
                    add_field => { "k8s_pod" => "%{[kubernetes][pod][name]}" }
                    add_field => { "k8s_container" => "%{[kubernetes][container][name]}" }
                  }
                }
                date {
                  match => [ "@timestamp", "ISO8601" ]
                }
              }
              output {
                elasticsearch {
                  hosts => ["elasticsearch:9200"]
                  index => "logs-%{+YYYY.MM.dd}"
                }
              }
              
    - name: Create Logstash Service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: logstash
            namespace: "{{ namespace }}"
            labels:
              app: logstash
          spec:
            selector:
              app: logstash
            ports:
            - port: 5044
              targetPort: 5044
              name: beats
              
    - name: Deploy Filebeat DaemonSet
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: DaemonSet
          metadata:
            name: filebeat
            namespace: "{{ namespace }}"
            labels:
              app: filebeat
          spec:
            selector:
              matchLabels:
                app: filebeat
            template:
              metadata:
                labels:
                  app: filebeat
              spec:
                serviceAccountName: filebeat
                containers:
                - name: filebeat
                  image: docker.elastic.co/beats/filebeat:8.11.0
                  args: [
                    "-c", "/etc/filebeat.yml",
                    "-e",
                  ]
                  env:
                  - name: ELASTICSEARCH_HOST
                    value: elasticsearch
                  - name: ELASTICSEARCH_PORT
                    value: "9200"
                  - name: LOGSTASH_HOST
                    value: logstash
                  - name: LOGSTASH_PORT
                    value: "5044"
                  - name: NODE_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: spec.nodeName
                  securityContext:
                    runAsUser: 0
                  resources:
                    limits:
                      memory: 200Mi
                    requests:
                      cpu: 100m
                      memory: 100Mi
                  volumeMounts:
                  - name: config
                    mountPath: /etc/filebeat.yml
                    subPath: filebeat.yml
                  - name: data
                    mountPath: /usr/share/filebeat/data
                  - name: varlibdockercontainers
                    mountPath: /var/lib/docker/containers
                    readOnly: true
                  - name: varlog
                    mountPath: /var/log
                    readOnly: true
                volumes:
                - name: config
                  configMap:
                    defaultMode: 0600
                    name: filebeat-config
                - name: varlibdockercontainers
                  hostPath:
                    path: /var/lib/docker/containers
                - name: varlog
                  hostPath:
                    path: /var/log
                - name: data
                  hostPath:
                    path: /var/lib/filebeat-data
                    type: DirectoryOrCreate
                    
    - name: Create Filebeat ServiceAccount
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: filebeat
            namespace: "{{ namespace }}"
            
    - name: Create Filebeat ClusterRole
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: filebeat
          rules:
          - apiGroups: [""]
            resources:
            - namespaces
            - pods
            - nodes
            verbs: ["get", "watch", "list"]
            
    - name: Create Filebeat ClusterRoleBinding
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: filebeat
          subjects:
          - kind: ServiceAccount
            name: filebeat
            namespace: "{{ namespace }}"
          roleRef:
            kind: ClusterRole
            name: filebeat
            apiGroup: rbac.authorization.k8s.io
            
    - name: Create Filebeat Configuration
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: filebeat-config
            namespace: "{{ namespace }}"
          data:
            filebeat.yml: |
              filebeat.inputs:
              - type: container
                paths:
                  - /var/log/containers/*.log
                processors:
                - add_kubernetes_metadata:
                    host: ${NODE_NAME}
                    matchers:
                    - logs_path:
                        logs_path: "/var/log/containers/"
              
              output.logstash:
                hosts: ["${LOGSTASH_HOST}:${LOGSTASH_PORT}"]
              
              processors:
              - add_host_metadata: ~
              - add_docker_metadata: ~
              - add_kubernetes_metadata:
                  host: ${NODE_NAME}
                  matchers:
                  - logs_path:
                      logs_path: "/var/log/containers/"
              
              logging.level: info
              logging.to_files: false
              logging.files:
                path: /var/log/filebeat
                name: filebeat
                keepfiles: 7
                permissions: 0644
                
    - name: Wait for Elasticsearch to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: StatefulSet
        name: elasticsearch
        namespace: "{{ namespace }}"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: 300
        
    - name: Display deployment summary
      debug:
        msg: |
          ELK Stack Deployment Summary:
          =============================
          Namespace: {{ namespace }}
          
          Components Deployed:
          ✅ Elasticsearch ({{ elasticsearch_replicas }} replicas)
          ✅ Kibana
          ✅ Logstash
          ✅ Filebeat (DaemonSet)
          
          Resources:
          📊 Elasticsearch: {{ elasticsearch_memory }} memory, {{ elasticsearch_cpu }} CPU
          📊 Kibana: {{ kibana_memory }} memory
          📊 Logstash: {{ logstash_memory }} memory
          💾 Storage: {{ storage_size }} per Elasticsearch node
          
          {% if expose_services %}
          External Access:
          🌐 Kibana: kubectl get svc kibana -n {{ namespace }}
          🔍 Elasticsearch: kubectl get svc elasticsearch-lb -n {{ namespace }}
          {% endif %}
          
          Next Steps:
          1. Wait for all pods to be ready: kubectl get pods -n {{ namespace }}
          2. Access Kibana web interface
          3. Configure index patterns for logs-*