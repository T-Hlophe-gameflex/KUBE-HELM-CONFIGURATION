---
# Apply Zone Settings
# Required variables: zone_id, resolved_domain

- name: Merge zone settings with survey values
  set_fact:
    merged_zone_settings: "{{ standard_zone_settings | default({}) | combine({'ssl_recommender': (ssl_tls_recommender | default('enabled')), 'cache_level': (cache_level_mode | default('standard'))}) }}"

- name: Apply standard zone settings
  uri:
    url: "https://api.cloudflare.com/client/v4/zones/{{ zone_id }}/settings/{{ item.key }}"
    method: PATCH
    headers:
      Authorization: "Bearer {{ lookup('env','CLOUDFLARE_API_TOKEN') }}"
      Content-Type: "application/json"
    body_format: json
    body:
      value: "{{ item.value }}"
    return_content: true
    validate_certs: "{{ cf_validate_certs | default(true) }}"
  loop: "{{ merged_zone_settings | default({'always_use_https': true, 'min_tls_version': '1.2', 'cache_level': 'standard'}) | dict2items }}"
  register: zone_settings_result
  when: zone_id is defined and zone_id | length > 0
  ignore_errors: yes
  failed_when: false

- name: Track zone settings
  set_fact:
    global_changes: "{{ global_changes + [{'type': 'ZONE_SETTINGS_APPLIED', 'domain': resolved_domain, 'settings': standard_zone_settings | default({'always_use_https': true, 'min_tls_version': '1.2', 'cache_level': 'standard'}) | list}] }}"
  when: zone_settings_result is defined

- name: Display settings result
  debug:
    msg:
      - "Standard zone settings configured"
      - "  Domain: {{ resolved_domain }}"
      - "  Zone ID: {{ zone_id | default('N/A') }}"
      - "  Attempted: {{ merged_zone_settings | default({}) | list }}"
      - "  Success: {{ zone_settings_result.results | selectattr('json.success', 'defined') | selectattr('json.success', 'equalto', true) | map(attribute='item.key') | list if (zone_settings_result is defined and zone_settings_result.results is defined) else [] }}"
      - "  Failed: {{ zone_settings_result.results | selectattr('json.success', 'defined') | selectattr('json.success', 'equalto', false) | map(attribute='item.key') | list if (zone_settings_result is defined and zone_settings_result.results is defined) else [] }}"
  when: zone_settings_result is defined
