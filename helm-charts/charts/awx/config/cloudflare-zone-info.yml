---
# Cloudflare Zone Information Playbook
# This playbook retrieves zone information and DNS records

- name: Cloudflare Zone Information
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    cloudflare_domain: "{{ survey_domain | default('example.com') }}"
    
  tasks:
    - name: Install Cloudflare collection
      ansible.builtin.command:
        cmd: ansible-galaxy collection install cloudflare.cloudflare --force
      delegate_to: localhost
      run_once: true
      
    - name: Get zone information
      cloudflare.cloudflare.cloudflare_dns:
        zone: "{{ cloudflare_domain }}"
        api_token: "{{ ansible_env.CLOUDFLARE_API_TOKEN | default(omit) }}"
        account_email: "{{ ansible_env.CLOUDFLARE_EMAIL | default(omit) }}"
        account_api_key: "{{ ansible_env.CLOUDFLARE_API_KEY | default(omit) }}"
        state: present
      register: zone_info
      
    - name: Display zone summary
      debug:
        msg:
          - "Zone: {{ cloudflare_domain }}"
          - "Total DNS Records: {{ zone_info.result | length if zone_info.result is defined else 0 }}"
          - "Zone ID: {{ zone_info.zone_id | default('Not available') }}"
          
    - name: Display DNS records by type
      debug:
        msg: "{{ item.type }} records: {{ zone_info.result | selectattr('type', 'equalto', item.type) | list | length }}"
      loop:
        - { type: "A" }
        - { type: "AAAA" }
        - { type: "CNAME" }
        - { type: "MX" }
        - { type: "TXT" }
        - { type: "SRV" }
      when: zone_info.result is defined
      
    - name: List all DNS records
      debug:
        msg: 
          - "Name: {{ item.name }}"
          - "Type: {{ item.type }}"
          - "Content: {{ item.content }}"
          - "TTL: {{ item.ttl }}"
          - "Proxied: {{ item.proxied | default('N/A') }}"
          - "---"
      loop: "{{ zone_info.result | default([]) }}"
      when: zone_info.result is defined and zone_info.result | length > 0