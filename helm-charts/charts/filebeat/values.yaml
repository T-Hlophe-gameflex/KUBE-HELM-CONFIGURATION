# Filebeat Configuration Values
# This file contains all configuration specific to Filebeat

filebeat:
  # Enable/disable Filebeat deployment
  enabled: true
  
  # Deploy as DaemonSet to collect logs from all nodes
  daemonset:
    enabled: true
  
  # Image configuration
  image:
    repository: docker.elastic.co/beats/filebeat
    tag: "8.10.4"
    pullPolicy: IfNotPresent
  
  # Logstash output configuration
  output:
    logstash:
      enabled: true
      hosts: ["elk-stack-platform-logstash:5044"]
      
      # Load balancing
      loadbalance: true
      
      # Connection settings
      worker: 2
      compression_level: 3
      timeout: 30s
      
    # Direct Elasticsearch output (alternative)
    elasticsearch:
      enabled: false
      hosts: ["elk-stack-platform-elasticsearch:9200"]
      index: "filebeat-%{+yyyy.MM.dd}"
      template:
        name: "filebeat"
        pattern: "filebeat-*"
  
  # Input configuration for collecting logs
  inputs:
    # Container logs input
    container:
      enabled: true
      paths:
        - /var/log/containers/*.log
      
      # Kubernetes metadata
      kubernetes:
        enabled: true
        hints:
          enabled: true
          default_config:
            type: container
            paths:
              - /var/log/containers/*${data.kubernetes.container.id}.log
      
      # Processors for enrichment
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
              - logs_path:
                  logs_path: "/var/log/containers/"
                  resource_type: "container"
        
        - drop_event:
            when:
              or:
                - equals:
                    kubernetes.container.name: "filebeat"
                - equals:
                    kubernetes.container.name: "metricbeat"
    
    # System logs input
    system:
      enabled: true
      paths:
        - /var/log/syslog
        - /var/log/messages
        - /var/log/kern.log
      
      # Log parsing
      multiline:
        pattern: '^\['
        negate: true
        match: after
    
    # Kubernetes audit logs
    audit:
      enabled: false
      paths:
        - /var/log/kubernetes/audit.log
      
      # JSON parsing for audit logs
      json:
        keys_under_root: true
        add_error_key: true
  
  # Global processors
  processors:
    # Add hostname and other metadata
    - add_host_metadata:
        when.not.contains.tags: forwarded
    
    # Add Docker metadata
    - add_docker_metadata: ~
    
    # Add Kubernetes metadata
    - add_kubernetes_metadata:
        host: ${NODE_NAME}
        matchers:
          - logs_path:
              logs_path: "/var/log/containers/"
              resource_type: "container"
    
    # Clean up unwanted fields
    - drop_fields:
        fields: ["beat", "input", "host.architecture", "host.os"]
        ignore_missing: true
    
    # Rename fields
    - rename:
        fields:
          - from: "log.file.path"
            to: "source"
          - from: "kubernetes.container.name"
            to: "container_name"
    
    # Add custom labels
    - add_labels:
        labels:
          cluster: "kubespray-cluster"
          environment: "kubernetes"
          collector: "filebeat"
  
  # Configuration files
  config:
    # Main filebeat.yml
    filebeat.yml: |
      filebeat.inputs:
      - type: container
        paths:
          - /var/log/containers/*.log
        processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
                resource_type: "container"
        - drop_event:
            when:
              or:
              - equals:
                  kubernetes.container.name: "filebeat"
              - equals:
                  kubernetes.container.name: "metricbeat"
      
      processors:
      - add_host_metadata:
          when.not.contains.tags: forwarded
      - add_docker_metadata: ~
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
          matchers:
          - logs_path:
              logs_path: "/var/log/containers/"
              resource_type: "container"
      - drop_fields:
          fields: ["beat", "input", "host.architecture", "host.os"]
          ignore_missing: true
      - add_labels:
          labels:
            cluster: "kubespray-cluster"
            environment: "kubernetes"
            collector: "filebeat"
      
      output.logstash:
        hosts: ["elk-stack-platform-logstash:5044"]
        loadbalance: true
        worker: 2
        compression_level: 3
        timeout: 30s
      
      logging.level: info
      logging.to_files: true
      logging.files:
        path: /var/log/filebeat
        name: filebeat
        keepfiles: 7
        permissions: 0644
      
      monitoring.enabled: true
  
  # Service configuration (for monitoring endpoint)
  service:
    enabled: true
    type: ClusterIP
    ports:
      http: 5066
    
    # Service annotations
    annotations: {}
  
  # Resource allocation
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "200Mi"
      cpu: "200m"
  
  # Health checks
  healthChecks:
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      exec:
        command:
          - filebeat
          - test
          - config
    
    readinessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      exec:
        command:
          - filebeat
          - test
          - config
  
  # Service Account with required permissions
  serviceAccount:
    create: true
    name: ""
    annotations: {}
  
  # RBAC configuration
  rbac:
    create: true
    
    # ClusterRole permissions
    rules:
      - apiGroups: [""]
        resources:
          - nodes
          - namespaces
          - pods
          - services
          - endpoints
          - persistentvolumes
          - persistentvolumeclaims
          - configmaps
        verbs: ["get", "list", "watch"]
      
      - apiGroups: ["apps"]
        resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
        verbs: ["get", "list", "watch"]
      
      - apiGroups: ["batch"]
        resources:
          - jobs
          - cronjobs
        verbs: ["get", "list", "watch"]
  
  # Pod Security Context
  podSecurityContext:
    runAsUser: 0  # Required for reading log files
    runAsGroup: 0
    fsGroup: 0
  
  # Container Security Context
  securityContext:
    runAsUser: 0  # Required for reading log files
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
      add:
        - DAC_READ_SEARCH  # Required for reading log files
  
  # Volume mounts for log collection
  volumeMounts:
    # Container logs
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
    
    - name: varlog
      mountPath: /var/log
      readOnly: true
    
    # Data directory for Filebeat
    - name: data
      mountPath: /usr/share/filebeat/data
    
    # Configuration
    - name: config
      mountPath: /usr/share/filebeat/filebeat.yml
      subPath: filebeat.yml
      readOnly: true
  
  # Volumes definition
  volumes:
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
        type: DirectoryOrCreate
    
    - name: varlog
      hostPath:
        path: /var/log
        type: DirectoryOrCreate
    
    - name: data
      hostPath:
        path: /var/lib/filebeat-data
        type: DirectoryOrCreate
    
    - name: config
      configMap:
        name: filebeat-config
        defaultMode: 0600
  
  # Extra volumes and volume mounts
  extraVolumes: []
  extraVolumeMounts: []
  
  # Extra environment variables
  extraEnvVars:
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  
  # Extra init containers
  extraInitContainers: []
  
  # Pod annotations
  podAnnotations: {}
  
  # Pod labels
  podLabels: {}
  
  # Node selection and scheduling
  nodeSelector: {}
  tolerations:
    # Allow scheduling on master nodes
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
  
  affinity: {}
  
  # Update strategy for DaemonSet
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  
  # Monitoring configuration
  monitoring:
    enabled: true
    
    # Metrics endpoint
    metrics:
      enabled: true
      port: 5066
      path: /stats
    
    # ServiceMonitor for Prometheus
    serviceMonitor:
      enabled: false
      namespace: monitoring
      interval: 30s
      labels: {}
  
  # Log rotation and cleanup
  logRotation:
    enabled: true
    maxFiles: 7
    maxSize: "10MB"
  
  # Environment-specific overrides
  environments:
    production:
      resources:
        requests:
          memory: "200Mi"
          cpu: "200m"
        limits:
          memory: "400Mi"
          cpu: "400m"
      
      # Enhanced monitoring in production
      monitoring:
        enabled: true
        serviceMonitor:
          enabled: true
      
      # More aggressive log cleanup
      logRotation:
        maxFiles: 3
        maxSize: "5MB"
    
    staging:
      resources:
        requests:
          memory: "150Mi"
          cpu: "150m"
        limits:
          memory: "300Mi"
          cpu: "300m"
    
    development:
      resources:
        requests:
          memory: "100Mi"
          cpu: "100m"
        limits:
          memory: "200Mi"
          cpu: "200m"
      
      # Debug output in development
      config:
        filebeat.yml: |
          filebeat.inputs:
          - type: container
            paths:
              - /var/log/containers/*.log
          
          output.console:
            pretty: true
          
          logging.level: debug