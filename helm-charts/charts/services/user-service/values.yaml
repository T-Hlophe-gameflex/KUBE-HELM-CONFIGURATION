userService:
  enabled: true
  replicaCount: 2
  
  image:
    repository: node
    tag: "18-alpine"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8081
    targetPort: 8081
  
  # Application configuration
  application:
    name: "user-service"
    port: 8081
    metricsPort: 9091
    
    # Database connection
    database:
      host: "postgres"
      port: 5432
      name: "platform_db"
      user: "platform_user"
      password: "platform_password"
    
    # Logging configuration
    logging:
      level: "info"
      format: "json"
    
    # Environment variables
    environment:
      NODE_ENV: "production"
      LOG_LEVEL: "info"
      SERVICE_NAME: "user-service"
      SERVICE_GROUP: "business-services"
      NAMESPACE: "backend"
  
  # Resource limits
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  
  # Health checks
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 8081
    initialDelaySeconds: 30
    periodSeconds: 10
  
  readinessProbe:
    enabled: true
    httpGet:
      path: /ready
      port: 8081
    initialDelaySeconds: 5
    periodSeconds: 5
  
  # Auto-scaling
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

# PostgreSQL dependency configuration
postgres:
  enabled: false  # Set to true if you want to deploy postgres with this chart
