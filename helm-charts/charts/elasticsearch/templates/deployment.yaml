{{- if .Values.elasticsearch.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "elk-stack-platform.fullname" . }}-elasticsearch
  namespace: monitoring
  labels:
    app: elasticsearch
    {{- include "elk-stack-platform.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.elasticsearch.replicaCount }}
  selector:
    matchLabels:
      app: elasticsearch
      {{- include "elk-stack-platform.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: elasticsearch
        {{- include "elk-stack-platform.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: fix-permissions
        image: {{ .Values.elasticsearch.initContainer.image }}:{{ .Values.elasticsearch.initContainer.tag }}
        command: ['sh', '-c', 'mkdir -p /usr/share/elasticsearch/data && chown -R 1000:1000 /usr/share/elasticsearch/data && chmod -R 755 /usr/share/elasticsearch/data']
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
      containers:
      - name: elasticsearch
        image: {{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}
        ports:
        - containerPort: 9200
          name: rest
        - containerPort: 9300
          name: inter-node
        env:
        - name: cluster.name
          value: {{ .Values.elasticsearch.clusterName }}
        - name: node.name
          value: {{ .Values.elasticsearch.nodeName }}
        - name: discovery.type
          value: {{ .Values.elasticsearch.discoveryType }}
        - name: "ES_JAVA_OPTS"
          value: {{ .Values.elasticsearch.javaOpts }}
        - name: xpack.security.enabled
          value: {{ .Values.elasticsearch.security.enabled | quote }}
        - name: xpack.security.enrollment.enabled
          value: "false"
        - name: xpack.security.http.ssl.enabled
          value: "false"
        - name: xpack.security.transport.ssl.enabled
          value: "false"
        - name: bootstrap.memory_lock
          value: {{ .Values.elasticsearch.memoryLock | quote }}
        - name: cluster.routing.allocation.disk.threshold_enabled
          value: {{ .Values.elasticsearch.diskAllocation.thresholdEnabled | quote }}
        - name: cluster.routing.allocation.disk.watermark.low
          value: {{ .Values.elasticsearch.diskAllocation.watermarkLow }}
        - name: cluster.routing.allocation.disk.watermark.high
          value: {{ .Values.elasticsearch.diskAllocation.watermarkHigh }}
        - name: cluster.routing.allocation.disk.watermark.flood_stage
          value: {{ .Values.elasticsearch.diskAllocation.watermarkFloodStage }}
        - name: action.auto_create_index
          value: {{ .Values.elasticsearch.autoCreateIndex | quote }}
        resources:
          {{- toYaml .Values.elasticsearch.resources | nindent 10 }}
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: elasticsearch-data
        {{- if .Values.elasticsearch.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "elk-stack-platform.fullname" . }}-elasticsearch-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
{{- end }}