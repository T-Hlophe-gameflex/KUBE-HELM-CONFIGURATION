# Elasticsearch Configuration Values
# This file contains all configuration specific to Elasticsearch

elasticsearch:
  # Enable/disable Elasticsearch deployment
  enabled: true
  
  # Number of Elasticsearch nodes
  replicaCount: 1
  
  # Image configuration
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: "8.10.4"
    pullPolicy: IfNotPresent
  
  # Init container for fixing permissions
  initContainer:
    image: busybox
    tag: "1.36"
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  
  # Elasticsearch cluster configuration
  cluster:
    name: k8s-logging-cluster
    initialMasterNodes: ["elasticsearch-0"]
    
    # Discovery configuration
    discovery:
      type: single-node  # single-node for dev, zen for production
      seedHosts: []
    
    # Cluster routing allocation
    routing:
      allocation:
        diskThresholdEnabled: true
        watermarkLow: "85%"
        watermarkHigh: "90%"
        watermarkFloodStage: "95%"
  
  # Node configuration
  node:
    name: elasticsearch
    roles: ["master", "data", "ingest"]
    maxLocalStorageNodes: 1
  
  # JVM and memory settings
  jvm:
    heapSize: "512m"  # Set to 50% of container memory limit
    opts: "-Xms512m -Xmx512m"
    
    # GC settings for better performance
    gcSettings: |
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=250
      -XX:+UseTLAB
      -XX:+ResizeTLAB
      -XX:+UnlockExperimentalVMOptions
      -XX:+UseJVMCICompiler
  
  # Security configuration
  security:
    enabled: false
    
    # SSL/TLS settings
    tls:
      enabled: false
      certificateSecret: ""
      keystorePassword: ""
      truststorePassword: ""
    
    # Authentication
    auth:
      enabled: false
      elasticPassword: "changeme"
      kibanaPassword: "changeme"
  
  # Index and data management
  indices:
    # Auto-create index patterns
    autoCreateIndex: true
    
    # Index lifecycle management
    ilm:
      enabled: true
      policies:
        logs:
          hot:
            maxSize: "5GB"
            maxAge: "7d"
          warm:
            maxAge: "30d"
          cold:
            maxAge: "90d"
          delete:
            maxAge: "365d"
    
    # Index templates
    templates:
      - name: "kubespray-logs"
        pattern: "kubespray-logs-*"
        settings:
          number_of_shards: 1
          number_of_replicas: 0
          refresh_interval: "10s"
        mappings:
          properties:
            "@timestamp":
              type: "date"
            message:
              type: "text"
              analyzer: "standard"
            kubernetes:
              type: "object"
  
  # Performance tuning
  performance:
    # Bootstrap memory lock
    memoryLock: false
    
    # Thread pools
    threadPools:
      search:
        size: 4
        queue_size: 1000
      index:
        size: 4
        queue_size: 200
    
    # Circuit breakers
    circuitBreakers:
      fielddata:
        limit: "40%"
      request:
        limit: "60%"
      total:
        limit: "70%"
  
  # Network configuration
  network:
    host: "0.0.0.0"
    publishHost: "_site_"
    
    # HTTP settings
    http:
      port: 9200
      maxContentLength: "100mb"
      compression: true
      
    # Transport settings  
    transport:
      port: 9300
      
  # Service configuration
  service:
    type: LoadBalancer
    ports:
      http: 9200
      transport: 9300
    
    # Service annotations
    annotations: {}
    
    # Load balancer settings (if type is LoadBalancer)
    loadBalancer:
      sourceRanges: []
      loadBalancerIP: ""  # MetalLB will auto-assign from pool
  
  # Resource allocation
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  # Persistence configuration
  persistence:
    enabled: false
    storageClass: ""
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    
    # Volume claim template for StatefulSet
    volumeClaimTemplate:
      metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
  
  # Health checks
  healthChecks:
    livenessProbe:
      enabled: true
      initialDelaySeconds: 90
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      httpGet:
        path: /_cluster/health?local=true
        port: 9200
    
    readinessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      httpGet:
        path: /_cluster/health?wait_for_status=yellow&timeout=1s
        port: 9200
  
  # Service Account
  serviceAccount:
    create: true
    name: ""
    annotations: {}
  
  # Pod Security Context
  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000
    runAsNonRoot: true
  
  # Container Security Context
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
  
  # Node selection and scheduling
  nodeSelector: {}
  tolerations: []
  affinity:
    # Anti-affinity to spread nodes across different hosts
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values: ["elasticsearch"]
            topologyKey: kubernetes.io/hostname
  
  # Pod Disruption Budget
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    # maxUnavailable: 1
  
  # Extra volumes and volume mounts
  extraVolumes: []
  extraVolumeMounts: []
  
  # Extra environment variables
  extraEnvVars: []
  
  # Extra init containers
  extraInitContainers: []
  
  # Pod annotations
  podAnnotations: {}
  
  # Pod labels
  podLabels: {}
  
  # Deployment strategy (for Deployment) or update strategy (for StatefulSet)
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  
  # Environment-specific overrides
  environments:
    production:
      replicaCount: 3
      persistence:
        enabled: true
        size: 50Gi
        storageClass: "fast-ssd"
      resources:
        requests:
          memory: "4Gi"
          cpu: "2000m"
        limits:
          memory: "8Gi"
          cpu: "4000m"
      jvm:
        heapSize: "4g"
        opts: "-Xms4g -Xmx4g"
      security:
        enabled: true
      cluster:
        discovery:
          type: zen
    
    staging:
      replicaCount: 2
      persistence:
        enabled: true
        size: 20Gi
      resources:
        requests:
          memory: "2Gi"
          cpu: "1000m"
        limits:
          memory: "4Gi"
          cpu: "2000m"
      jvm:
        heapSize: "2g"
        opts: "-Xms2g -Xmx2g"
    
    development:
      replicaCount: 1
      persistence:
        enabled: false
      resources:
        requests:
          memory: "512Mi"
          cpu: "250m"
        limits:
          memory: "1Gi"
          cpu: "500m"